package com.yjh.db.domain;

import java.util.ArrayList;
import java.util.List;

public class AllDdztExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public AllDdztExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public AllDdztExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public AllDdztExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AllDdztExample example = new AllDdztExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public AllDdztExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public AllDdztExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDdztbmIsNull() {
            addCriterion("ddztbm is null");
            return (Criteria) this;
        }

        public Criteria andDdztbmIsNotNull() {
            addCriterion("ddztbm is not null");
            return (Criteria) this;
        }

        public Criteria andDdztbmEqualTo(Integer value) {
            addCriterion("ddztbm =", value, "ddztbm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztbmEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddztbm = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztbmNotEqualTo(Integer value) {
            addCriterion("ddztbm <>", value, "ddztbm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztbmNotEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddztbm <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztbmGreaterThan(Integer value) {
            addCriterion("ddztbm >", value, "ddztbm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztbmGreaterThanColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddztbm > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztbmGreaterThanOrEqualTo(Integer value) {
            addCriterion("ddztbm >=", value, "ddztbm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztbmGreaterThanOrEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddztbm >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztbmLessThan(Integer value) {
            addCriterion("ddztbm <", value, "ddztbm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztbmLessThanColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddztbm < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztbmLessThanOrEqualTo(Integer value) {
            addCriterion("ddztbm <=", value, "ddztbm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztbmLessThanOrEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddztbm <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztbmIn(List<Integer> values) {
            addCriterion("ddztbm in", values, "ddztbm");
            return (Criteria) this;
        }

        public Criteria andDdztbmNotIn(List<Integer> values) {
            addCriterion("ddztbm not in", values, "ddztbm");
            return (Criteria) this;
        }

        public Criteria andDdztbmBetween(Integer value1, Integer value2) {
            addCriterion("ddztbm between", value1, value2, "ddztbm");
            return (Criteria) this;
        }

        public Criteria andDdztbmNotBetween(Integer value1, Integer value2) {
            addCriterion("ddztbm not between", value1, value2, "ddztbm");
            return (Criteria) this;
        }

        public Criteria andDdztIsNull() {
            addCriterion("ddzt is null");
            return (Criteria) this;
        }

        public Criteria andDdztIsNotNull() {
            addCriterion("ddzt is not null");
            return (Criteria) this;
        }

        public Criteria andDdztEqualTo(String value) {
            addCriterion("ddzt =", value, "ddzt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddzt = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztNotEqualTo(String value) {
            addCriterion("ddzt <>", value, "ddzt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztNotEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddzt <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztGreaterThan(String value) {
            addCriterion("ddzt >", value, "ddzt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztGreaterThanColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddzt > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztGreaterThanOrEqualTo(String value) {
            addCriterion("ddzt >=", value, "ddzt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztGreaterThanOrEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddzt >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztLessThan(String value) {
            addCriterion("ddzt <", value, "ddzt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztLessThanColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddzt < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztLessThanOrEqualTo(String value) {
            addCriterion("ddzt <=", value, "ddzt");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria andDdztLessThanOrEqualToColumn(AllDdzt.Column column) {
            addCriterion(new StringBuilder("ddzt <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDdztLike(String value) {
            addCriterion("ddzt like", value, "ddzt");
            return (Criteria) this;
        }

        public Criteria andDdztNotLike(String value) {
            addCriterion("ddzt not like", value, "ddzt");
            return (Criteria) this;
        }

        public Criteria andDdztIn(List<String> values) {
            addCriterion("ddzt in", values, "ddzt");
            return (Criteria) this;
        }

        public Criteria andDdztNotIn(List<String> values) {
            addCriterion("ddzt not in", values, "ddzt");
            return (Criteria) this;
        }

        public Criteria andDdztBetween(String value1, String value2) {
            addCriterion("ddzt between", value1, value2, "ddzt");
            return (Criteria) this;
        }

        public Criteria andDdztNotBetween(String value1, String value2) {
            addCriterion("ddzt not between", value1, value2, "ddzt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_ddzt
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        private AllDdztExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        protected Criteria(AllDdztExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public AllDdztExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table all_ddzt
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table all_ddzt
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table all_ddzt
         *
         * @mbg.generated
         */
        void example(com.yjh.db.domain.AllDdztExample example);
    }
}